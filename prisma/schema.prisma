// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id         String     @id @default(uuid())
  firstNames String
  lastName   String
  avatar     String?
  email      String     @unique
  username   String?    @unique
  password   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  role_id    String
  role       Role       @relation(fields: [role_id], references: [id])
  seedPosts  SeedPost[]
  profile    Profile?
}

model Role {
  id         String     @id @default(uuid())
  name       String     @unique
  permissions String[]
  users      User[]
  role_id    String
}

model SeedPost {
  id          String     @id @default(uuid())
  title       String
  description String?
  offerType   OfferType
  tradeFor    String? // What they want in trade (if applicable)
  status      PostStatus @default(AVAILABLE)
  latitude    Decimal // Location coordinates
  longitude   Decimal
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String
  images      Image[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Image {
  id         String   @id @default(uuid())
  url        String // URL to image storage (e.g., S3, Cloudinary)
  seedPost   SeedPost @relation(fields: [seedPostId], references: [id])
  seedPostId String
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId String  @unique
}

enum PostStatus {
  AVAILABLE
  PENDING // When a trade is in progress
  COMPLETED
}

enum OfferType {
  FREE
  TRADE
}
